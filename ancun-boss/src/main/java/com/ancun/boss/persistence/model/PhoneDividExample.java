package com.ancun.boss.persistence.model;

import java.util.ArrayList;
import java.util.List;

public class PhoneDividExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PHONE_DIVID
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PHONE_DIVID
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PHONE_DIVID
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PHONE_DIVID
     *
     * @mbggenerated
     */
    public PhoneDividExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PHONE_DIVID
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PHONE_DIVID
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PHONE_DIVID
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PHONE_DIVID
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PHONE_DIVID
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PHONE_DIVID
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PHONE_DIVID
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PHONE_DIVID
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PHONE_DIVID
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PHONE_DIVID
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PHONE_DIVID
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPhoneIsNull() {
            addCriterion("PHONE is null");
            return (Criteria) this;
        }

        public Criteria andPhoneIsNotNull() {
            addCriterion("PHONE is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneEqualTo(Integer value) {
            addCriterion("PHONE =", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotEqualTo(Integer value) {
            addCriterion("PHONE <>", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneGreaterThan(Integer value) {
            addCriterion("PHONE >", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneGreaterThanOrEqualTo(Integer value) {
            addCriterion("PHONE >=", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneLessThan(Integer value) {
            addCriterion("PHONE <", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneLessThanOrEqualTo(Integer value) {
            addCriterion("PHONE <=", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneIn(List<Integer> values) {
            addCriterion("PHONE in", values, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotIn(List<Integer> values) {
            addCriterion("PHONE not in", values, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneBetween(Integer value1, Integer value2) {
            addCriterion("PHONE between", value1, value2, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotBetween(Integer value1, Integer value2) {
            addCriterion("PHONE not between", value1, value2, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneSourceIsNull() {
            addCriterion("PHONE_SOURCE is null");
            return (Criteria) this;
        }

        public Criteria andPhoneSourceIsNotNull() {
            addCriterion("PHONE_SOURCE is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneSourceEqualTo(String value) {
            addCriterion("PHONE_SOURCE =", value, "phoneSource");
            return (Criteria) this;
        }

        public Criteria andPhoneSourceNotEqualTo(String value) {
            addCriterion("PHONE_SOURCE <>", value, "phoneSource");
            return (Criteria) this;
        }

        public Criteria andPhoneSourceGreaterThan(String value) {
            addCriterion("PHONE_SOURCE >", value, "phoneSource");
            return (Criteria) this;
        }

        public Criteria andPhoneSourceGreaterThanOrEqualTo(String value) {
            addCriterion("PHONE_SOURCE >=", value, "phoneSource");
            return (Criteria) this;
        }

        public Criteria andPhoneSourceLessThan(String value) {
            addCriterion("PHONE_SOURCE <", value, "phoneSource");
            return (Criteria) this;
        }

        public Criteria andPhoneSourceLessThanOrEqualTo(String value) {
            addCriterion("PHONE_SOURCE <=", value, "phoneSource");
            return (Criteria) this;
        }

        public Criteria andPhoneSourceLike(String value) {
            addCriterion("PHONE_SOURCE like", value, "phoneSource");
            return (Criteria) this;
        }

        public Criteria andPhoneSourceNotLike(String value) {
            addCriterion("PHONE_SOURCE not like", value, "phoneSource");
            return (Criteria) this;
        }

        public Criteria andPhoneSourceIn(List<String> values) {
            addCriterion("PHONE_SOURCE in", values, "phoneSource");
            return (Criteria) this;
        }

        public Criteria andPhoneSourceNotIn(List<String> values) {
            addCriterion("PHONE_SOURCE not in", values, "phoneSource");
            return (Criteria) this;
        }

        public Criteria andPhoneSourceBetween(String value1, String value2) {
            addCriterion("PHONE_SOURCE between", value1, value2, "phoneSource");
            return (Criteria) this;
        }

        public Criteria andPhoneSourceNotBetween(String value1, String value2) {
            addCriterion("PHONE_SOURCE not between", value1, value2, "phoneSource");
            return (Criteria) this;
        }

        public Criteria andPhoneCallBatchIsNull() {
            addCriterion("PHONE_CALL_BATCH is null");
            return (Criteria) this;
        }

        public Criteria andPhoneCallBatchIsNotNull() {
            addCriterion("PHONE_CALL_BATCH is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneCallBatchEqualTo(String value) {
            addCriterion("PHONE_CALL_BATCH =", value, "phoneCallBatch");
            return (Criteria) this;
        }

        public Criteria andPhoneCallBatchNotEqualTo(String value) {
            addCriterion("PHONE_CALL_BATCH <>", value, "phoneCallBatch");
            return (Criteria) this;
        }

        public Criteria andPhoneCallBatchGreaterThan(String value) {
            addCriterion("PHONE_CALL_BATCH >", value, "phoneCallBatch");
            return (Criteria) this;
        }

        public Criteria andPhoneCallBatchGreaterThanOrEqualTo(String value) {
            addCriterion("PHONE_CALL_BATCH >=", value, "phoneCallBatch");
            return (Criteria) this;
        }

        public Criteria andPhoneCallBatchLessThan(String value) {
            addCriterion("PHONE_CALL_BATCH <", value, "phoneCallBatch");
            return (Criteria) this;
        }

        public Criteria andPhoneCallBatchLessThanOrEqualTo(String value) {
            addCriterion("PHONE_CALL_BATCH <=", value, "phoneCallBatch");
            return (Criteria) this;
        }

        public Criteria andPhoneCallBatchLike(String value) {
            addCriterion("PHONE_CALL_BATCH like", value, "phoneCallBatch");
            return (Criteria) this;
        }

        public Criteria andPhoneCallBatchNotLike(String value) {
            addCriterion("PHONE_CALL_BATCH not like", value, "phoneCallBatch");
            return (Criteria) this;
        }

        public Criteria andPhoneCallBatchIn(List<String> values) {
            addCriterion("PHONE_CALL_BATCH in", values, "phoneCallBatch");
            return (Criteria) this;
        }

        public Criteria andPhoneCallBatchNotIn(List<String> values) {
            addCriterion("PHONE_CALL_BATCH not in", values, "phoneCallBatch");
            return (Criteria) this;
        }

        public Criteria andPhoneCallBatchBetween(String value1, String value2) {
            addCriterion("PHONE_CALL_BATCH between", value1, value2, "phoneCallBatch");
            return (Criteria) this;
        }

        public Criteria andPhoneCallBatchNotBetween(String value1, String value2) {
            addCriterion("PHONE_CALL_BATCH not between", value1, value2, "phoneCallBatch");
            return (Criteria) this;
        }

        public Criteria andPhoneStatusIsNull() {
            addCriterion("PHONE_STATUS is null");
            return (Criteria) this;
        }

        public Criteria andPhoneStatusIsNotNull() {
            addCriterion("PHONE_STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneStatusEqualTo(String value) {
            addCriterion("PHONE_STATUS =", value, "phoneStatus");
            return (Criteria) this;
        }

        public Criteria andPhoneStatusNotEqualTo(String value) {
            addCriterion("PHONE_STATUS <>", value, "phoneStatus");
            return (Criteria) this;
        }

        public Criteria andPhoneStatusGreaterThan(String value) {
            addCriterion("PHONE_STATUS >", value, "phoneStatus");
            return (Criteria) this;
        }

        public Criteria andPhoneStatusGreaterThanOrEqualTo(String value) {
            addCriterion("PHONE_STATUS >=", value, "phoneStatus");
            return (Criteria) this;
        }

        public Criteria andPhoneStatusLessThan(String value) {
            addCriterion("PHONE_STATUS <", value, "phoneStatus");
            return (Criteria) this;
        }

        public Criteria andPhoneStatusLessThanOrEqualTo(String value) {
            addCriterion("PHONE_STATUS <=", value, "phoneStatus");
            return (Criteria) this;
        }

        public Criteria andPhoneStatusLike(String value) {
            addCriterion("PHONE_STATUS like", value, "phoneStatus");
            return (Criteria) this;
        }

        public Criteria andPhoneStatusNotLike(String value) {
            addCriterion("PHONE_STATUS not like", value, "phoneStatus");
            return (Criteria) this;
        }

        public Criteria andPhoneStatusIn(List<String> values) {
            addCriterion("PHONE_STATUS in", values, "phoneStatus");
            return (Criteria) this;
        }

        public Criteria andPhoneStatusNotIn(List<String> values) {
            addCriterion("PHONE_STATUS not in", values, "phoneStatus");
            return (Criteria) this;
        }

        public Criteria andPhoneStatusBetween(String value1, String value2) {
            addCriterion("PHONE_STATUS between", value1, value2, "phoneStatus");
            return (Criteria) this;
        }

        public Criteria andPhoneStatusNotBetween(String value1, String value2) {
            addCriterion("PHONE_STATUS not between", value1, value2, "phoneStatus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PHONE_DIVID
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PHONE_DIVID
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}